{
  "swagger": "2.0",
  "info": {
    "description": "Backend ::House-Buy:: App",
    "version": "1.0.0",
    "title": "Swagger House-Buy Api",
    "contact": {
      "email": "development@tedesco.es"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/tedesco8/home-buy-api/blob/main/LICENSE"
    }
  },
  "host": "https://house-nuy-api.herokuapp.com/",
  "basePath": "/v1/api",
  "tags": [
    {
      "name": "User",
      "description": "Everything about users"
    },
    {
      "name": "House",
      "description": "Everything about houses"
    }
  ],
  "schemes": ["http", "https"],
  "paths": {
    "/auth/signin": {
      "post": {
        "tags": ["User"],
        "summary": "Login",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "object",
            "in": "body",
            "type": "object",
            "description": "Objects",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": ["User"],
        "summary": "Create user",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "object",
            "in": "body",
            "type": "object",
            "description": "Objects",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["User"],
        "summary": "Finds All the Users",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "pageNum",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "name": "pageSize",
            "type": "number",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Find one user",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "patch": {
        "tags": ["User"],
        "summary": "Update one user",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization header for JWT",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete one user",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    },
    "/house": {
      "get": {
        "tags": ["House"],
        "summary": "Finds All the Houses",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "pageNum",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "name": "pageSize",
            "type": "number",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "post": {
        "tags": ["House"],
        "summary": "Create house",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "object",
            "in": "body",
            "type": "model schema",
            "description": "Objects",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization header for JWT",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/House"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    },
    "/houses/{id}": {
      "get": {
        "tags": ["House"],
        "summary": "Find one house",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "House Id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/House"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "patch": {
        "tags": ["House"],
        "summary": "Update one house",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "House Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization header for JWT",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/House"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "delete": {
        "tags": ["House"],
        "summary": "Delete one house",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "House Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization header for JWT",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/House"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "imgUser": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "House": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "imgCard": {
          "type": "string"
        },
        "upvotes": {
          "type": "boolean"
        },
        "downvotes": {
          "type": "boolean"
        },
        "author": {
          "type": "ObjectId"
        },
        "comments": {
          "type": "ObjectId"
        },
        "start": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "price": {
          "type": "string"
        },
        "mts": {
          "type": "number"
        },
        "bed_rooms": {
          "type": "number"
        },
        "bath_rooms": {
          "type": "number"
        },
        "wifi": {
          "type": "boolean"
        }
      }
    }
  }
}
